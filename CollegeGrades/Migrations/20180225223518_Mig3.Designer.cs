// <auto-generated />
using CollegeGrades.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace CollegeGrades.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20180225223518_Mig3")]
    partial class Mig3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CollegeGrades.Models.Account", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConfirmEmailToken");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsVerified");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("ProfileImage");

                    b.Property<string>("ResetPasswordToken");

                    b.Property<int>("RoleTypeID");

                    b.HasKey("ID");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("CollegeGrades.Models.AttendedSubject", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccountID");

                    b.Property<string>("CycleID");

                    b.Property<string>("SubjectID");

                    b.Property<string>("TeacherID");

                    b.HasKey("ID");

                    b.HasIndex("AccountID");

                    b.HasIndex("CycleID");

                    b.HasIndex("SubjectID");

                    b.HasIndex("TeacherID");

                    b.ToTable("AttendedSubjects");
                });

            modelBuilder.Entity("CollegeGrades.Models.Cycle", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Semester");

                    b.Property<int>("Year");

                    b.HasKey("ID");

                    b.ToTable("Cycles");
                });

            modelBuilder.Entity("CollegeGrades.Models.Score", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AttendedSubjectID");

                    b.Property<string>("Name");

                    b.Property<float>("Value");

                    b.HasKey("ID");

                    b.HasIndex("AttendedSubjectID");

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("CollegeGrades.Models.Subject", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("CollegeGrades.Models.Teacher", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("CollegeGrades.Models.AttendedSubject", b =>
                {
                    b.HasOne("CollegeGrades.Models.Account", "Account")
                        .WithMany("AttendedSubjects")
                        .HasForeignKey("AccountID");

                    b.HasOne("CollegeGrades.Models.Cycle", "Cycle")
                        .WithMany("AttendedSubjects")
                        .HasForeignKey("CycleID");

                    b.HasOne("CollegeGrades.Models.Subject", "Subject")
                        .WithMany("AttendedSubjects")
                        .HasForeignKey("SubjectID");

                    b.HasOne("CollegeGrades.Models.Teacher", "Teacher")
                        .WithMany("AttendedSubjects")
                        .HasForeignKey("TeacherID");
                });

            modelBuilder.Entity("CollegeGrades.Models.Score", b =>
                {
                    b.HasOne("CollegeGrades.Models.AttendedSubject", "AttendedSubject")
                        .WithMany("Scores")
                        .HasForeignKey("AttendedSubjectID");
                });
#pragma warning restore 612, 618
        }
    }
}
